<!-- 

	servo_control.launch

	This launch file will set up serial communication between the Arduino
	Mega and this laptop (vis USB cable).  The Arduino will read steering
	and throttle commands from the Devo7 Transmitter as well as from the 
	ROS topics: "steering_servo_position" and "throttle_servo_position".
	
	If the 'GEAR' switch on the Devo7 Transmitter is set to '0', the car 
	will be in 'manual mode' (Arduino LED should be OFF). The transmitter
	will control the steering and throttle. 

	If the 'GEAR' switch on the Devo7 Transmitter is set to '1', the car 
	will be in 'autonomous mode' (Arduino LED should be ON). The ROS topics
	will control the steering and throttle. 

	Manual commands that will have the same effect as this launch file are:

		roscore
		rosrun rosserial_python serial_node.py _port:=/dev/ttyACM0 _baud:=57600
		rostopic pub steering_servo_position std_msgs/UInt16 "data: 1200" --once
		rostopic pub throttle_servo_position std_msgs/UInt16 "data: 1550" --once
		(NOTE: servo_positions range of acceptable values: [1100, 1900])


-->

<launch>

	<!-- create a parameter -->
	<!-- <param name="/number_publish_frequency" type="double" value="3.0" />
	<param name="/number_to_publish" type="int" value="10" />
 -->


	<!-- start a python node -->
	<!-- <node name="number_publisher" pkg="my_robot_tutorials" type="number_publisher.py" />
	
 -->
</launch>
